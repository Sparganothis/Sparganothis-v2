name: Rust

on:
  push:
    branches: [ "master"]
    tags: ['*']
  workflow_dispatch:

permissions:
  contents: write # for committing to gh-pages branch.
  pages: write
  id-token: write
  
concurrency:
  group: "pages"
  cancel-in-progress: false
env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  build:
    name: Build Client/Server

    # strategy:
    #   fail-fast: false
    #   matrix:
    #     os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ubuntu-latest
    # runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Add wasm32-unknown-unknown
      run: rustup target add wasm32-unknown-unknown
        
    # - name: Install Node.js
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: 20
        
    # - name: npm install wasm-pack
    #   run: npm install wasm-pack || ( sleep 5 && npm install wasm-pack )

    - uses: Swatinem/rust-cache@v2
      with:
        cache-all-crates: true
        # key: ${{ matrix.os }}
        cache-on-failure: true
        workspaces: |
          ./

    - name: Install binstall
      uses: cargo-bins/cargo-binstall@main

    - name: Install dioxus-cli
      run: cargo binstall dioxus-cli@0.6.3 --no-confirm --force || cargo install dioxus-cli@0.6.3

    - name: Trunk Build Prod
      run: ./build_web_release.sh

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: "./dist"

  release_pages:
    name: Release Github Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build]
    steps:
    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
    - uses: actions/download-artifact@v4
    - name: print all downloaded artifacts
      run: ls -R .
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4