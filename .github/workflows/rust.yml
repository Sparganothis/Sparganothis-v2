name: Rust

on:
  push:
    branches: [ "master"]
    tags: ['*']
  workflow_dispatch:

permissions:
  contents: write # for committing to gh-pages branch.
  pages: write
  id-token: write
  
concurrency:
  group: "pages"
  cancel-in-progress: false
env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  build:
    name: Build Client/Server

    # strategy:
    #   fail-fast: false
    #   matrix:
    #     os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ubuntu-latest
    # runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Add wasm32-unknown-unknown
      run: rustup target add wasm32-unknown-unknown
        
    # - name: Install Node.js
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: 20
        
    # - name: npm install wasm-pack
    #   run: npm install wasm-pack || ( sleep 5 && npm install wasm-pack )

    - uses: Swatinem/rust-cache@v2
      with:
        cache-all-crates: true
        # key: ${{ matrix.os }}
        cache-on-failure: true
        workspaces: |
          ./

    - name: Install binstall
      uses: cargo-bins/cargo-binstall@main

    - name: Install dioxus-cli
      run: cargo binstall dioxus-cli@0.6.3  wasm-bindgen-cli@0.2.100  --no-confirm --force || cargo install dioxus-cli@0.6.3   wasm-bindgen-cli@0.2.100
 
    - name: Send Chat Message Started
      run: |
        text=$(git log -1 --no-merges --pretty=%B)
        sha=$(git rev-parse --short HEAD)
        ( echo "Github Action: STARTED: $sha '$text' ... " | bash start_cli.sh ) || true

    - name: Build Web Release
      run: chmod +x ./build_web_release.sh && ./build_web_release.sh

    # - name: Upload artifact - dist
    #   uses: actions/upload-pages-artifact@v3
    #   with:
    #     path: "./dist"

    # - name: Upload artifact - dist_server
    #   uses: actions/upload-pages-artifact@v3
    #   with:
    #     path: "./dist_server"

    - name: Github Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        commit: "${{ github.sha }}"
        tag: "live"
        makeLatest: true
        artifacts: "dist2/**/*"
        bodyFile: ".github/release_template.md"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist2
        path: |
          dist2

  deploy_server:
    name: "Deploy Server using SSH"
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v4
    - name: Install server SSH key
      run: |
        set -ex
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > ../private.key
        sudo chmod 600 ../private.key
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
      shell: bash
      env:
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
        SSH_KEY_PATH: ${{ github.workspace }}/../private.key

    - name: SSH - upload artifacts to server
      run: |
        set -ex
        ssh -i $SSH_KEY_PATH $SSH_USERNAME@$SSH_TARGET bash -c "cd Sparganothis-v2; git fetch -ap; git pull || git reset --hard origin/master; . ~/.profile; bash ./migrate_clickhouse.sh; echo OK1";
        ls -alh dist2
        scp -rv -i $SSH_KEY_PATH dist2/* $SSH_USERNAME@$SSH_TARGET:dist2/
        ssh -i $SSH_KEY_PATH $SSH_USERNAME@$SSH_TARGET sudo systemctl restart sparganothis-server.service
      shell: bash
      env:
        SSH_KEY_PATH: ${{ github.workspace }}/../private.key
        SSH_USERNAME: ${{secrets.SSH_USERNAME}}
        SSH_TARGET: ${{secrets.SSH_TARGET}}


  # release_pages:
  #   name: Release Github Pages
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   # if: "startsWith(github.ref, 'refs/tags/')"
  #   needs: [build]
  #   steps:
  #   - name: Setup Pages
  #     uses: actions/configure-pages@v4
  #     with:
  #       enablement: true
  #   - uses: actions/download-artifact@v4
  #   - name: print all downloaded artifacts
  #     run: ls -R .
  #   - name: Deploy to GitHub Pages
  #     id: deployment
  #     uses: actions/deploy-pages@v4